import "package://pkg.pkl-lang.org/pkl-pantry/pkl.toml@1.0.0#/toml.pkl"
output {
 renderer = new toml.Renderer {}
}

typealias LineNumbers = "absolute" | "relative" 

typealias StatusLineElements = "mode" | "spinner" | "file-name" |
"file-base-name" | "file-modification-indicator" | "file-encoding" |
"file-line-ending" | "read-only-indicator" | "total-line-numbers" | "file-type"
| "diagnostics" | "workspace-diagnostics" | "selections" |
"primary-selection-length" | "position" | "position-percentage" | "separator" |
"spacer" | "version-control" | "register"


typealias Gutters = "diagnostics" | "spacer" | "line-numbers" | "diff" 

typealias Bufferline = "never" | "always" | "multiple"

typealias CursorShapes = "block" | "bar" | "underline" | "hidden"

typealias LineEndings = "native" | "lf" | "crlf" | "ff" | "cr" | "nel"

class Mode {
    /// The text shown in the mode element for normal mode
    normal: Null | String = null

    /// The text shown in the mode element for insert mode
    insert: Null | String = null

    /// The text shown in the mode element for select mode
    select: Null | String = null
}

class StatusLine {
    /// A list of elements aligned to the left of the statusline
    left: Null | List<StatusLineElements> = null

    /// A list of elements aligned to the middle of the statusline
    center: Null | List<StatusLineElements> = null

    /// A list of elements aligned to the right of the statusline
    right: Null | List<StatusLineElements> = null

    /// The character used to separate elements in the statusline
    separator: Null | String = null

    /// The current editor mode
    mode: Mode
}

class CursorShape {
    /// Cursor shape in normal mode
    normal: Null | CursorShapes = null 

    /// Cursor shape in normal mode
    insert: Null | CursorShapes = null

    /// Cursor shape in select mode
    select: Null | CursorShapes = null
}

class Lsp {
    /// Enables LSP integration. Setting to false will completely disable language servers regardless of language settings.
    enable: Null | Boolean = null

    /// Display LSP progress messages below statusline
    `display-messages`: Null | Boolean = null

    /// Display inlay hints
    `auto-signature-help`: Null | Boolean = null

    /// Display docs under signature help popup
    `display-inlay-hints`: Null | Boolean = null

    /// Display docs under signature help popup 
    `display-signature-help-docs`: Null | Boolean = null

    /// Enables snippet completions. Requires a server restart (:lsp-restart) to take effect after :config-reload/:set.
    `snippets`: Null | Boolean = null

    /// Include declaration in the goto references popup
    `goto-reference-include-declaration`: Null | Boolean = null
}

class FilePicker {
    /// Enables ignoring hidden files
    `hidden`: Null | Boolean = null 

    /// Follow symlinks instead of ignoring them
    `follow-symlinks`: Null | Boolean = null

    /// Ignore symlinks that point at files already shown in the picker
    `deduplicate-links`: Null | Boolean = null

    /// Enables reading ignore files from parent directories
    parents: Null | Boolean = null

    /// Enables reading .ignore files
    ignore: Null | Boolean = null

    /// Enables reading .gitignore files
    `git-ignore`: Null | Boolean = null

    /// Enables reading global .gitignore, whose path is specified in git's config: core.excludefile option
    `git-global`: Null | Boolean = null

    /// Enables reading .git/info/exclude files
    `git-exclude`: Null | Boolean = null

    /// Set with an integer value for maximum depth to recurse
    `max-depth`: Null | UInt | "None" = null
}

class Editor {
    /// Number of lines of padding around the edge of the screen when scrolling
    scrolloff: Null | UInt = null 

    /// Enable mouse mode
    mouse: Null | Boolean = null 

    /// Middle click paste support
    `middle-click-paste`: Null | Boolean = null

    /// Number of lines to scroll per scroll wheel step
    `scroll-lines`: Null | UInt = null

    /// Shell to use when running external commands
    shell: Null | List<String> = null  

    /// Line number display: absolute simply shows each line's number, while relative shows the distance from the current line. When unfocused or in insert mode, relative will still show absolute line numbers
    `line-number`: Null | LineNumbers = null
    
    /// Highlight all lines with a cursor
    cursorline: Null | Boolean = null

    /// Highlight all columns with a cursor
    cursorcolumn: Null | Boolean = null

    /// Gutters to display: Available are diagnostics and diff and line-numbers and spacer, note that diagnostics also includes other features like breakpoints, 1-width padding will be inserted if gutters is non-empty
    gutters: Null | List<Gutters> = null

    /// Enable automatic pop up of auto-completion
    `auto-completion`: Null | Boolean = null

    /// Enable automatic formatting on save
    `auto-format`: Null | Boolean = null

    /// Enable automatic saving on the focus moving away from Helix. Requires focus event support from your terminal
    `auto-save`: Null | Boolean = null

    /// Time in milliseconds since last keypress before idle timers trigger. Used for autocompletion, set to 0 for instant
    `idle-timeout`: Null | UInt = null

    /// Whether to apply completion item instantly when selected
    `preview-completion-insert`: Null | Boolean = null

    /// The min-length of word under cursor to trigger autocompletion
    `completion-trigger-len`: Null | UInt = null

    /// Set to true to make completions always replace the entire word and not just the part before the cursor
    `completion-replace`: Null | Boolean = null

    /// Whether to display info boxes
    `auto-info`: Null | Boolean = null

    /// Set to true to override automatic detection of terminal truecolor support in the event of a false negative
    `true-color`: Null | Boolean = null

    /// Set to true to override automatic detection of terminal undercurl support in the event of a false negative
    `undercurl`: Null | Boolean = null
    
    /// List of column positions at which to display the rulers. Can be overridden by language specific rulers in languages.toml file
    rulers: Null | List<UInt> = null

    /// Renders a line at the top of the editor displaying open buffers. Can be always, never or multiple (only shown if more than one buffer is in use)
    bufferline: Null | Bufferline = null

    /// Whether to color the mode indicator with different colors depending on the mode itself
    `color-modes`: Null | Boolean = null

    /// Maximum line length. Used for the :reflow command and soft-wrapping if soft-wrap.wrap-at-text-width is set
    `text-width`: Null | UInt = null

    /// Directories relative to the workspace root that are treated as LSP roots. Should only be set in .helix/config.toml
    `workspace-lsp-roots`: Null | List<String> = null

    /// The line ending to use for new documents. Can be native, lf, crlf, ff, cr or nel. native uses the platform's native line ending (crlf on Windows, otherwise lf).
    `default-line-ending`: Null | LineEndings = null 

    /// Whether to automatically insert a trailing line-ending on write if missing
    `insert-final-newline`: Null | Boolean = null

    /// Allows configuring the statusline at the bottom of the editor.
    statusline: StatusLine

    /// LSP options
    lsp: Lsp

    /// Defines the shape of cursor in each mode. Valid values for these options are block, bar, underline, or hidden.
    `cursor-shape`: CursorShape
    
    /// Set options for file picker and global search. Ignoring a file means it is not visible in the Helix file picker and global search.
    `file-picker`: FilePicker

    `auto-pairs`: Dynamic = new {} 
}


editor: Editor

